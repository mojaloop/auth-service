version: 2.1
orbs:
  node: circleci/node@2.1.1
  docker: circleci/docker@1.0.1

jobs:
  setup:
    executor: node/default
    steps:
      - checkout    
      - node/install-packages
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  test-unit:
    executor: node/default
    steps:
      - checkout    
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run: mkdir -p ./test/results
      - run: npm run test:unit
      - run: mv ./junit.xml ./test/results/unit-junit.xml
      - store_artifacts:
          path: ./test/results
          prefix: test
      - store_test_results:
          path: ./test/results

  test-bdd:
    executor: node/default
    steps:
      - checkout    
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run: mkdir -p ./test/results
      - run: npm run test:bdd
      - run: mv ./junit.xml ./test/results/bdd-junit.xml
      - store_artifacts:
          path: ./test/results
          prefix: test
      - store_test_results:
          path: ./test/results

  test-coverage:
    docker:
      - image: node:12.16.1-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install default dependencies
          command: |
            apk --no-cache add git
            apk --no-cache add ca-certificates
            apk --no-cache add curl
            apk --no-cache add openssh-client
            apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake
            npm config set unsafe-perm true
            npm install -g node-gyp
      - run:
          name: Install AWS CLI dependencies
          command: |
            apk --no-cache add \
              python \
              py-pip \
              groff \
              less \
              mailcap
            pip install --upgrade awscli==1.14.5 s3cmd==2.0.1 python-magic
            apk -v --purge del py-pip
      - run:
          name: Execute code coverage check
          command: npm -s run test:coverage-check
      - store_artifacts:
          path: coverage
          prefix: test
      - store_test_results:
          path: coverage
      - run:
          name: Copy code coverage to SonarQube
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ];
            then
                echo "Sending lcov.info to SonarQube..."
                aws s3 cp coverage/lcov.info $AWS_S3_DIR_SONARQUBE/$CIRCLE_PROJECT_REPONAME/lcov.info
            else
                echo "Not a release (env CIRCLE_BRANCH != 'master'), skipping sending lcov.info to SonarQube."
            fi

  check-vulnerabilities:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Create dir for audit results
          command: mkdir -p ./audit/results
      - run:
          name: Check for new npm vulnerabilities
          command: npm run audit:check --silent -- --json > ./audit/results/auditResults.json
      - store_artifacts:
          path: ./audit/results
          prefix: audit 

  audit-licencees:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install and set up license-scanner
          command: |
            git clone https://github.com/mojaloop/license-scanner /tmp/license-scanner
            cd /tmp/license-scanner && make build default-files set-up
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Prune non-production packages before running license-scanner
          command: npm prune --production
      - run:
          name: Run the license-scanner
          command: cd /tmp/license-scanner && pathToRepo=/home/circleci/project make run
      - store_artifacts:
          path: /tmp/license-scanner/results
          prefix: licenses

  
workflows:
  version: 2
  build_accept:
    jobs:
      - setup
      - test-unit:
          requires:
            - setup
      - test-bdd:
          requires:
            - setup
      - test-coverage:
          requires:
            - setup
      - check-vulnerabilities:
          requires:
            - setup
      - audit-licencees:
          requires:
            - setup
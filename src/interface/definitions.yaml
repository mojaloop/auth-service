## Auth-Service Specific Definitions:
AccountAddress:
  title: AccountAddress
  type: string
  description: Unique routable address which is DFSP specific.
  pattern: ^([0-9A-Za-z_~\-\.]+[0-9A-Za-z_~\-])$
  minLength: 1
  maxLength: 1023

AccountId:
  type: string
  description: >
    A long-lived account identifier provided by the DFSP
    this MUST NOT be Bank Account Number or anything that
    may expose a User's private bank account information

AuthScopesEnum:
  title: AuthScopesEnum
  type: string
  enum:
    - accounts.getBalance
    - accounts.transfer
  description: |
    The scopes requested for a ConsentRequest
    - "accounts.getBalance" - Get the balance of a given account
    - "accounts.transfer" - initiate a transfer from an account

Consent:
  title: Consent
  type: object
  description: Data model for the complex type Consent
  properties:
    id:
      allOf:
        - $ref: '#/definitions/CorrelationId'
      description: >
        Common ID between the PISP and FSP for the Consent object
        decided by the DFSP who creates the Consent

        This field is REQUIRED for POST /consent
    requestId:
      allOf:
        - $ref: '#/definitions/CorrelationId'
      description: >
        The id of the ConsentRequest that was used to initiate the
        creation of this Consent
    participantId:
      $ref: '#/definitions/FspId'
    initiatorId:
      allOf:
        - $ref: '#/definitions/FspId'
      description: PISP identifier who uses this Consent
    scopes:
      type: array
      items:
        $ref: '#/definitions/Scope'
    credential:
      $ref: '#/definitions/Credential'

Credential:
  title: Credential
  type: object
  description: >
    A credential used to allow a user to prove their identity and access to an account with a DFSP
  properties:
    id:
      type: string
      description: The id of a Credential
    type:
      $ref: '#/definitions/CredentialTypeEnum'
    status:
      $ref: '#/definitions/CredentialStatusEnum'
    challenge:
      $ref: '#/definitions/CredentialChallenge'
    payload:
      type: string
      description: Base64 encoded bytes - The public key of the Public/Private keypair
  required:
    - id
    - type
    - status

 # TODO: update me to be an empty body!
GenerateChallengeRequest:
  title: GenerateChallengeRequest
  type: object
  description: >
    A credential used to allow a user to prove their identity and access to an account with a DFSP
  properties:
    type:
      $ref: '#/definitions/CredentialTypeEnum'
  required:
    - type

CredentialChallenge:
  title: CredentialChallenge
  type: object
  description: >
    The challenge issued by a DFSP that must be answered by the PISP
  properties:
    payload:
      type: string
      description: Base64 encoded binary of the challenge that must be answered by the PISP
    signature:
      type: string
      description: Base64 enoded binary string or result of the payload signed by the PISP using the private key
  required:
    - payload

CredentialStatusEnum:
  title: CredentialStatus
  type: string
  enum:
    - PENDING
    - ACTIVE
  description: |
    The status of the Credential's creation
    - "PENDING" - The PISP has requested a challenge, or the challenge has initialized but not yet answered by the PISP
    - "ACTIVE" - The Credential is valid, and ready to be used by the PISP

CredentialTypeEnum:
  title: CredentialTypeEnum
  type: string
  enum:
    - FIDO
  description: |
    The type of the Credential
    - "FIDO" - A FIDO public/private keypair

Scope:
  title: Scope
  type: object
  description: Scope + Account Identifier mapping for a Consent
  properties:
    scope:
      $ref: '#/definitions/AuthScopesEnum'
    accountId:
      $ref: '#/definitions/AccountId'
  required:
    - scope
    - accountId

ThirdPartyAuthorizationRequest:
  title: ThirdPartyAuthorizationRequest
  type: object
  description: The Request object for verifying an authorization
  properties:
    challenge: 
      type: string
      description: The original Challenge (Quote response) object as a UTF-8 JSON string (Normalization Form C)
    value:
      type: string
      description: The signed Challenge (Quote response) object as base64 encoded string
    consentId:
      - $ref: '#/definitions/CorrelationId'
      description: >
        Common ID between the PISP and FSP for the Consent object
        decided by the DFSP who creates the Consent
    sourceAccountId:
      - $ref: '#/definitions/AccountId'
    status:
      type: string
      enum:
        - PENDING
        - VERIFIED
      description: The transaction signature verification status

  required:
    - challenge
    - value
    - consentId
    - sourceAccountId
    - status


# TODO: 
# replace with references to api-snippets, once api-snippets has Swagger 2.0 support
BinaryString:
  description: 'The API data type BinaryString is a JSON String. The string is a base64url  encoding of a string of raw bytes, where padding (character ‘=’) is added at the end of the data if needed to ensure that the string is a multiple of 4 characters. The length restriction indicates the allowed number of characters.'
  pattern: '^[A-Za-z0-9-_]+[=]{0,2}$'
  type: string
BinaryString32:
  description: 'The API data type BinaryString32 is a fixed size version of the API data type BinaryString, where the raw underlying data is always of 32 bytes. The data type BinaryString32 should not use a padding character as the size of the underlying data is fixed.'
  pattern: '^[A-Za-z0-9-_]{43}$'
  type: string
CorrelationId:
  title: CorrelationId
  description: 'Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).'
  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
  type: string
Date:
  title: Date
  description: 'The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples - "1982-05-23", "1987-08-05”'
  pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$'
  type: string
DateTime:
  title: DateTime
  description: 'The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).'
  pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$'
  type: string
ErrorCode:
  title: ErrorCode
  description: 'The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.'
  pattern: '^[1-9]\d{3}$'
  type: string
ErrorDescription:
  title: ErrorDescription
  description: Error description string.
  maxLength: 128
  minLength: 1
  type: string
ExtensionKey:
  title: ExtensionKey
  description: Extension key.
  maxLength: 32
  minLength: 1
  type: string
ExtensionValue:
  title: ExtensionValue
  description: Extension value.
  maxLength: 128
  minLength: 1
  type: string
FspId:
  title: FspId
  description: FSP identifier.
  maxLength: 32
  minLength: 1
  type: string
Integer:
  title: Integer
  description: The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits.
  pattern: '^[1-9]\d*$'
  type: string
ErrorInformation:
  title: ErrorInformation
  description: Data model for the complex type ErrorInformation.
  required:
    - errorCode
    - errorDescription
  type: object
  properties:
    errorCode:
      description: Specific error number.
      type: string
    errorDescription:
      description: Error description string.
      type: string
    extensionList:
      $ref: '#/definitions/ExtensionList'
      description: 'Optional list of extensions, specific to deployment.'
ErrorInformationObject:
  title: ErrorInformationObject
  description: Data model for the complex type object that contains ErrorInformation.
  required:
    - errorInformation
  type: object
  properties:
    errorInformation:
      $ref: '#/definitions/ErrorInformation'
ErrorInformationResponse:
  title: ErrorInformationResponse
  description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
  type: object
  properties:
    errorInformation:
      $ref: '#/definitions/ErrorInformation'
Extension:
  title: Extension
  description: Data model for the complex type Extension
  required:
    - key
    - value
  type: object
  properties:
    key:
      description: Extension key.
      type: string
    value:
      description: Extension value.
      type: string
ExtensionList:
  title: ExtensionList
  description: Data model for the complex type ExtensionList
  required:
    - extension
  type: object
  properties:
    extension:
      description: Number of Extension elements
      maxItems: 16
      minItems: 1
      type: array
      items:
        $ref: '#/definitions/Extension'
Status:
  title: Status
  description: Data model for the api status.
  type: object
  properties:
    status:
      description: 'The return status, usually "OK"'
      type: string
    uptime:
      description: The amount of time in seconds that the server has been up for.
      type: number
    startTime:
      description: The UTC time that the server started up
      type: string
    versionNumber:
      description: Current version of the API
      type: string
    services:
      description: An list of the statuses of services that the API requires
      type: array
      items: {}